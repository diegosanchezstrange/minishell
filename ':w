#include <minishell.h>

int	ft_llen(char *s1, char *s2)
{
	if (ft_strlen(s1) >= ft_strlen(s2))
		return (ft_strlen(s1));
	else
		return (ft_strlen(s2));
}

int	ft_sorted(char **env)
{
	int	i;

	i = 0;
	while(env[i])
	{
		if (env[i + 1])
		{
			if (ft_strncmp(env[i], env[i + 1], 
						ft_llen(env[i], env[i + 1])) > 0)
				return (0);
		}
		i++;
	}
	return (1); 
}

void	ft_sortenv(void)
{
	char	**environ;

	printf("hoalaaaaa\n");
	environ = ft_envmatrix();
	if (!ft_sorted(environ))
		printf("xd\n");
}
void	ft_export(t_ast *tree)
{
	t_list	**cpy;
	char	**data;

	cpy = ft_calloc(1, sizeof(void *));
	*cpy = g_env;
	printf("------------------\n");
	printf("queeeeee %s\n", tree->data);
	if (tree->left->data == NULL)
	{
		ft_sortenv();
		return ;
	}
	data = ft_split(tree->left->data, '=');
	while ((*cpy)->next)
	{
		if (ft_strnstr((*cpy)->next->content, data[0], ft_strlen(data[0])))
		{
			free((*cpy)->next->content);
			(*cpy)->next->content = ft_strdup(tree->left->data);
			return ;
		}
		(*cpy) = (*cpy)->next;
	}
	ft_free_split(data);
	free(cpy);
	ft_lstadd_back(&g_env, ft_lstnew(ft_strdup(tree->left->data)));
}
